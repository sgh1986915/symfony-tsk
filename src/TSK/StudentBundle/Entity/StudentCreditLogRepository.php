<?php

namespace TSK\StudentBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use TSK\StudentBundle\Entity\Student;
use TSK\ClassBundle\Entity\ClassType;
use TSK\RankBundle\Entity\RankType;

/**
 * StudentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StudentCreditLogRepository extends EntityRepository
{
    /**
     * getKbCreditsEarnedSinceLastKbPromotion 
     * 
     * @param Student $student 
     * @access public
     * @return int
     */
    public function getKbCreditsEarnedSinceLastKbPromotion(Student $student)
    {
        // TODO:  Need to make this better
        $kbClassType = $this->_em->getRepository('TSK\ClassBundle\Entity\ClassType')->findOneBy(array('name' => 'KICKBOXING'));
        $kbRankType = $this->_em->getRepository('TSK\RankBundle\Entity\RankType')->findOneBy(array('name' => 'kickboxing stripe'));
        return $this->getCreditsEarnedSinceLastPromotion($student, $kbClassType, $kbRankType);
    }

    /**
     * getGrCreditsEarnedSinceLastGrPromotion 
     * 
     * @param Student $student 
     * @access public
     * @return int
     */
    public function getGrCreditsEarnedSinceLastGrPromotion(Student $student)
    {
        $grClassType = $this->_em->getRepository('TSK\ClassBundle\Entity\ClassType')->findOneBy(array('name' => 'GRAPPLING'));
        $grRankType = $this->_em->getRepository('TSK\RankBundle\Entity\RankType')->findOneBy(array('name' => 'grappling stripe'));
        return $this->getCreditsEarnedSinceLastPromotion($student, $grClassType, $grRankType);
    }

    /**
     * getCreditsEarnedSinceLastPromotion 
     * 
     * @param Student $student 
     * @param ClassType $classType 
     * @param RankType $rankType 
     * @access public
     * @return int
     */
    public function getCreditsEarnedSinceLastPromotion(Student $student, ClassType $classType = NULL, RankType $rankType = NULL)
    {
        // First get last promotion date
        $lastPromotionDate = $this->_em->getRepository('TSK\StudentBundle\Entity\StudentRank')->getLastPromotionDate($student, $rankType);

        $dql = 'SELECT SUM(c.value) FROM TSK\StudentBundle\Entity\StudentCreditLog c WHERE ';
        $clauses = array();
        $clauses[] = 'c.student=:student';
        if ($classType) {
            $clauses[] = 'c.classType=:classType';
        }
        // if ($rankType) {
        //     $clauses[] = 'c.rankType=:rankType';
        // }
        $clauses[] = 'c.dateEarned > :dateEarned';

        $dql .= join(' AND ', $clauses);
        
        $query = $this->_em->createQuery($dql);
        $query->setParameter(':student', $student);
        if ($classType) {
            $query->setParameter(':classType', $classType);
        }
        // if ($rankType) {
        //     $query->setParameter(':rankType', $rankType);
        // }
        $query->setParameter(':dateEarned', $lastPromotionDate);

        try {
            $results = $query->getSingleResult();
            $num = array_pop($results);
        } catch (\Doctrine\Orm\NoResultException $e) {
            $num = 0;
        }
        return is_null($num) ? 0 : $num;
    }
}
