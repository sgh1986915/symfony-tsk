<?php

namespace TSK\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * ContactRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactRepository extends EntityRepository
{
    public function findDupe($contact)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT c FROM TSK\UserBundle\Entity\Contact c WHERE c.firstName=:firstName AND c.lastName=:lastName AND c.address1=:address1 AND c.address2=:address2 AND c.city=:city AND c.state=:state AND c.postalCode=:postalCode AND c.phone=:phone');
        $query->setParameter(':firstName', $contact->getFirstName());
        $query->setParameter(':lastName', $contact->getLastName());
        $query->setParameter(':address1', $contact->getAddress1());
        $query->setParameter(':address2', $contact->getAddress2());
        $query->setParameter(':city', $contact->getCity());
        $query->setParameter(':state', $contact->getState());
        $query->setParameter(':postalCode', $contact->getPostalCode());
        $query->setParameter(':phone', $contact->getPhone());
        try {
            $contact = $query->getSingleResult();
            return $contact;
        } catch (NoResultException $e) {
            return null;
        }
    }
        
    public function getOpenChargesForContact($contact)
    {
        $charges = array();
        if (is_numeric($contact)) {
            $contact = $this->find($contact);
        }

        if (is_object($contact)) {
            $em = $this->getEntityManager();
            $query = $em->createQuery('SELECT s, ct, c FROM TSK\StudentBundle\Entity\Student s LEFT JOIN s.contracts ct LEFT JOIN ct.charges c LEFT JOIN c.chargePayments cp WHERE s.contact=?1'); 
            $query->setParameter(1, $contact);
            try {
                $student = $query->getSingleResult();
            } catch (NoResultException $e) {
                return NULL;
            }

            foreach ($student->getContracts() as $contract) {
                foreach ($contract->getCharges() as $charge) {
                    if ($charge->getOpenAmount()) {
                        $charges[] = $charge;
                    }
                }
            }
            return $charges;
        }
    }
}
