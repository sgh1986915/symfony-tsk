<?xml version="1.0" encoding="UTF-8"?>

<project name="TSK ERP" default="build">
 <property file="build.properties" />
 <property file="default.properties" />
 <target name="build"
   depends="prepare,lint,phpunit,phpcb"/>
 <!--
 <target name="build"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit,phpcb"/>
   -->

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

 <target name="tools-parallel" description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdox"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>
 </target>

 <target name="migrate" description="Run Doctrine Migrations">
  <exec executable="php">
    <arg value="app/console" />
    <arg value="doctrine:migrations:migrate" />
    <arg value="--no-interaction" />
  </exec>
 </target>

 <target name="prepare" depends="clean,composer,set_permissions,migrate" description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
  <mkdir dir="${basedir}/build/phpdox"/>
 </target>

<target name="remove_cache_logs" description="Set Permissions">
  <exec executable="rm">
    <arg value="-rf" />
    <arg value="app/cache/*" />
  </exec>
  <exec executable="rm">
    <arg value="-rf" />
    <arg value="app/logs/*" />
  </exec>
</target>


<target name="set_permissions" depends="rm_cache, rm_logs, set_permissions_setfacl, set_permissions_chmod"></target>
<target name="set_permissions_setfacl" description="Set Permissions" if="${permissions.setfacl}">
    <!--sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/cache app/logs -->
    <echo message="using setfacl" />
    <exec executable="sudo">
        <arg value="setfacl" />
        <arg value="-R" />
        <arg value="-m" />
        <arg value="u:${apache.username}:rwx" />
        <arg value="-m" />
        <arg value="u:`whoami`:rwx" />
        <arg value="app/cache" />
        <arg value="app/logs" />
    </exec>
    <!-- sudo setfacl -dR -m u:www-data:rwx -m u:`whoami`:rwx app/cache app/logs -->
    <exec executable="sudo">
        <arg value="setfacl" />
        <arg value="-dR" />
        <arg value="-m" />
        <arg value="u:${apache.username}:rwx" />
        <arg value="-m" />
        <arg value="u:`whoami`:rwx" />
        <arg value="app/cache" />
        <arg value="app/logs" />
    </exec>
    <echo message="using setfacl" />
</target>

<target name="rm_cache" description="Remove everything under cache dir">
    <delete includeemptydirs="true"><fileset dir="app/cache" includes="**/*" defaultexcludes="false" /></delete>
</target>

<target name="rm_logs" description="Remove everything under logs dir">
    <delete includeemptydirs="true"><fileset dir="app/logs" includes="**/*" defaultexcludes="false" /></delete>
</target>

<target name="set_permissions_chmod" description="Set Permissions" unless="${permissions.setfacl}">
    <echo message="using chmod +a" />
    <exec executable="sudo">
        <arg value="chmod" />
        <arg value="+a" />
        <arg value="${apache.username} allow delete,write,append,file_inherit,directory_inherit" />
        <arg value="app/cache" />
        <arg value="app/logs" />
    </exec>

    <exec executable="sudo">
        <arg value="chmod" />
        <arg value="+a" />
        <arg value="${cli.username} allow delete,write,append,file_inherit,directory_inherit" />
        <arg value="app/cache" />
        <arg value="app/logs" />
    </exec>
    <echo message="done using chmod +a" />
</target>

 <target name="lint" description="Perform syntax check of sourcecode files">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="text" />
   <arg value="${basedir}/build/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="xml" />
   <arg value="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=${basedir}/build/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=${basedir}/build/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox"/>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" failonerror="true">
    <arg value="-c" />
    <arg value="app/" />
  </exec>
 </target>

 <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--source" />
   <arg path="${basedir}/src" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser" />
  </exec>
 </target>

 <target name="composer" description="Installing dependencies">
    <exec executable="composer.phar" failonerror="true">
      <arg value="self-update" />
    </exec>
    <exec executable="composer.phar" failonerror="true">
      <arg value="install" />
      <arg value="--prefer-dist" />
    </exec>
  </target>
</project>

